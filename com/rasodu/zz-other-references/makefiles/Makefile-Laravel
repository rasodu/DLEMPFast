#Steps to deploy
#1. Create new Makefile and include out standard Makefile in the new Makefile: 'include vendor/rasodu/services/com/rasodu/zz-other-references/makefiles/Makefile-Laravel' > Makefile

include .env
CMD_TERMINAL = docker run --rm --user=$$(id -u):$$(id -g) -v $$(pwd):/usr/share/nginx/WEBAPP rasodu/cmdlaravel:$(DLEMPFAST_RASODU_PHPFPMLARAVEL_VERSION).2
COMPOSE = docker-compose
PHONY =

#start server
PHONY += up
up: vendor
	$(COMPOSE) build
	$(COMPOSE) up -d

vendor: composer.json
	$(CMD_TERMINAL) composer install


#access bash
PHONY += enter
enter:
	$(COMPOSE) exec --user=$$(id -u):$$(id -g) cmd bash

PHONY += enter-root
enter-root:
	$(COMPOSE) exec cmd bash


#laravel development
PHONY += watch
watch: node_modules
	$(COMPOSE) exec --user=$$(id -u):$$(id -g) cmd gulp watch

node_modules: package.json
	$(COMPOSE) exec cmd npm install --global gulp-cli
	$(COMPOSE) exec cmd npm install

PHONY += browser
browser:
	firefox http://webapp.dev:3001/ https://webapp.dev:3002/ &

PHONY += watch-log
watch-log:
	watch -n1 docker logs --tail 20 $(COMPOSE_PROJECT_NAME)_phpfpm_1

PHONY += clearcache
clearcache:
	-$(CMD_TERMINAL) php artisan config:clear
	-$(COMPOSE) exec cmd php artisan cache:clear


#deploy
PHONY += build-optimize
build-optimize:
	$(CMD_TERMINAL) composer install --optimize-autoloader
	$(CMD_TERMINAL) php artisan config:cache
	$(COMPOSE) build

PHONY += push
push::
	docker push $(DLEMPFAST_REPOSITORY_PREFIX)$(COMPOSE_PROJECT_NAME)_phpfpmlaravel:$(DLEMPFAST_PROJECT_VERSION)
	docker push $(DLEMPFAST_REPOSITORY_PREFIX)$(COMPOSE_PROJECT_NAME)_httpbackendlaravelnginx:$(DLEMPFAST_PROJECT_VERSION)
	#docker push $(DLEMPFAST_REPOSITORY_PREFIX)$(COMPOSE_PROJECT_NAME)_nodejs:$(DLEMPFAST_PROJECT_VERSION)

PHONY += push-repository
push-repository::
	echo $(DLEMPFAST_REPOSITORY_PREFIX)$(COMPOSE_PROJECT_NAME)_phpfpmlaravel:$(DLEMPFAST_PROJECT_VERSION)
	echo $(DLEMPFAST_REPOSITORY_PREFIX)$(COMPOSE_PROJECT_NAME)_httpbackendlaravelnginx:$(DLEMPFAST_PROJECT_VERSION)
	#$(DLEMPFAST_REPOSITORY_PREFIX)$(COMPOSE_PROJECT_NAME)_nodejs:$(DLEMPFAST_PROJECT_VERSION)

PHONY += aws-docker-run-copy
aws-docker-run-copy:
	if [ ! -f Dockerrun.aws.json ]; then cp "vendor/rasodu/services/other references/aws beanstalk/Dockerrun.aws.json" Dockerrun.aws.json; fi


#stop server
PHONY += mostlyclean
mostlyclean: clearcache
	$(COMPOSE) down -v --rmi local

PHONY += clean
clean: clearcache
	-$(COMPOSE) exec cmd rm -r node_modules
	-$(COMPOSE) down -v --rmi local
	-$(RM) -r vendor

#declare the contents of the PHONY variable as phony.
.PHONY: $(PHONY)
